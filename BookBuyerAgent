 package agents;

import jade.core.Agent;
import behaviours.RequestPerformer;
import jade.core.AID;
import jade.core.behaviours.*;
import jade.domain.DFService;
import jade.domain.FIPAException;
import jade.domain.FIPAAgentManagement.DFAgentDescription;
import jade.domain.FIPAAgentManagement.ServiceDescription;
 
import gui.BookBuyerGui;

public class BookBuyerAgent extends Agent {
  private String bookTitle;
  private AID[] sellerAgents;
  private int ticker_timer = 10000;
  private BookBuyerAgent this_agent = this;
  
  private BookBuyerGui gui;
  
  protected void setup() {
    
    System.out.println("Agente comprador " + getAID().getName() + " esta activo");
    
    gui = new BookBuyerGui(this);
    gui.showGui();
  }
  
  public void Busqueda(String title){
      addBehaviour(new OneShotBehaviour(){
          public void action(){
            Object[] args = getArguments();
            if(title.length()>0){
             bookTitle = title;
              System.out.println("Libro: " + bookTitle);

                  System.out.println("Intentando comprar " + bookTitle);

                  DFAgentDescription template = new DFAgentDescription();
                  ServiceDescription sd = new ServiceDescription();
                  sd.setType("book-selling");
                  template.addServices(sd);

                  try {
                    DFAgentDescription[] result = DFService.search(myAgent, template);
                    System.out.println("Encontrando al agente vendedor:");
                    sellerAgents = new AID[result.length];
                    for(int i = 0; i < result.length; i++) {
                      sellerAgents[i] = result[i].getName();
                      System.out.println(sellerAgents[i].getName());
                    }

                  }catch(FIPAException fe) {
                    fe.printStackTrace();
                  }

                  myAgent.addBehaviour(new RequestPerformer(this_agent));
            }
            else{
              System.out.println("No se ha especificado ningun titulo de libro para buscar");
              doDelete();
            } 
          }
      });
  }
  
  protected void takeDown() {
    gui.dispose();
    System.out.println("Agente comprador " + getAID().getName() + " terminado");
  }
  
  public AID[] getSellerAgents() {
    return sellerAgents;
  }
  
  public String getBookTitle() {
    return bookTitle;
  }
}
